name: Push

on: push

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-cache-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-yarn-v1-

      - name: Yarn install (game)
        run: yarn install
        working-directory: packages/game

      - name: Yarn build (game)
        run: NODE_ENV=production yarn build
        working-directory: packages/game

      - name: Yarn install (lobby)
        run: yarn install
        working-directory: packages/lobby

      - name: Yarn build (lobby)
        run: NODE_ENV=production yarn build
        working-directory: packages/lobby

      - name: Install musl
        run: sudo apt-get install musl-tools

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Cache target
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cache-target-v1-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-target-v1-

      - name: Cache .cargo
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cache-cargo-v1-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-cargo-v1-

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target x86_64-unknown-linux-musl --release

      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target x86_64-unknown-linux-musl --release

      - name: Make dist
        run: ./scripts/make-dist.sh

      - name: Deploy dist
        if: github.ref == 'refs/heads/master'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          source: turbo-hearts.tgz
          target: /opt
          overwrite: true

      - name: Run dist
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: /opt/deploy-play.anti.run.sh

      - name: Upload dist
        uses: actions/upload-artifact@v1
        with:
          name: turbo-hearts.tgz
          path: turbo-hearts.tgz
